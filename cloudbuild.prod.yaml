steps:
- id: go_get
  name: "gcr.io/cloud-builders/go"
  args: ["get","-d","-v","github.com/gorilla/mux"]
  env: ["GOPATH=/workspace/gopath"]

- id: go_test
  name: "gcr.io/cloud-builders/go"
  args: ["test","./src"]
  env: ["GOPATH=/workspace/gopath"]

- id: go_build
  name: "gcr.io/cloud-builders/go"
  args: ["build","./src/app.go"]
  env: ["GOPATH=/workspace/gopath"]

- id: build_docker
  name: "gcr.io/cloud-builders/docker"
  args: ["build","-t","gcr.io/$PROJECT_ID/curso-code-desafio-cd:$SHORT_SHA","-f","Dockerfile.prod"]

- id: pushing_image
  name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/$PROJECT_ID/curso-code-desafio-cd:$SHORT_SHA']

- id: adjusting_deployment_file_k8s"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |
      sed 's#img-app-deployment#gcr.io/$PROJECT_ID/curso-code-desafio-cd:$SHORT_SHA#g' app.yaml > app-prod.yaml;
      cat app-prod.yaml;

- id: deploying_app
  name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'app-prod.yaml'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=my-first-cluster-1'
